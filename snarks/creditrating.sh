#!/usr/bin/env sh
set -ex

# CREDIT RATING TREE GENERATOR
# This script creates a Merkle tree with 4 leaves that each represent a buyer with an identifier, a public key used and a credit score ranging from 0-100. It generates a json file with a proof for each buyer and the calculated root hash that can be used with the proof.

OUT=out/

PYCRYPTO="python3 pycrypto/cli.py" 

# Below data is autogenerated and should be replaced with actual keys used in the NFT registry.
BUYER1=$(printf "%040d" 1)
BUYER1_KEY=$($PYCRYPTO keygen)
BUYER1_PUB=$(echo $BUYER1_KEY | cut -d' ' -f2)
BUYER1_PRIV=$(echo $BUYER1_KEY | cut -d' ' -f1)
BUYER1_RATING="64" # 100 in decimal
BUYER1_LEAF="$BUYER1$BUYER1_PUB$BUYER_RATING"
BUYER1_HASH=$(echo -n $BUYER1_LEAF | xxd -r -p | sha256sum | cut -d' ' -f1)

BUYER2=$(printf "%040d" 2) 
BUYER2_KEY=$($PYCRYPTO keygen)
BUYER2_PUB=$(echo $BUYER2_KEY | cut -d' ' -f2)
BUYER2_PRIV=$(echo $BUYER2_KEY | cut -d' ' -f1)
BUYER2_RATING="0a" # 10 in decimal
BUYER2_HASH=$(echo -n "$BUYER2$BUYER2_PUB$BUYER_RATING" | xxd -r -p | sha256sum | cut -d' ' -f1)

BUYER3=$(printf "%040d" 3) 
BUYER3_KEY=$($PYCRYPTO keygen)
BUYER3_PUB=$(echo $BUYER3_KEY | cut -d' ' -f2)
BUYER3_PRIV=$(echo $BUYER3_KEY | cut -d' ' -f1)
BUYER3_RATING="0a" # 10 in decimal
BUYER3_HASH=$(echo -n "$BUYER3$BUYER3_PUB$BUYER_RATING" | xxd -r -p | sha256sum | cut -d' ' -f1)

BUYER4=$(printf "%040d" 4) 
BUYER4_KEY=$($PYCRYPTO keygen)
BUYER4_PUB=$(echo $BUYER4_KEY | cut -d' ' -f2)
BUYER4_PRIV=$(echo $BUYER4_KEY | cut -d' ' -f1)
BUYER4_RATING="60" # 96 in decimal
BUYER4_HASH=$(echo -n "$BUYER4$BUYER4_PUB$BUYER_RATING" | xxd -r -p | sha256sum | cut -d' ' -f1)

BUYER_NODE1=$($PYCRYPTO hash $BUYER1_HASH$BUYER2_HASH)
BUYER_NODE2=$($PYCRYPTO hash $BUYER3_HASH$BUYER4_HASH)
BUYER_ROOT=$($PYCRYPTO hash $BUYER_NODE1$BUYER_NODE2)

cat > "$OUT/credit_rating.json" << EOF
{
    "ROOT": "$BUYER_ROOT",
    "$BUYER1": {
	"right": [false, false],
	"hashes": ["$BUYER2_HASH", "$BUYER_NODE2"]
    },
    "$BUYER2": {
        "right":[true, false],
	"hashes": ["$BUYER1_HASH", "$BUYER_NODE2"]
    },
    "$BUYER3": {
        "right":[false, true],
	"hashes": ["$BUYER4_HASH", "$BUYER_NODE1"]
    },
    "$BUYER3": {
        "right":[true, true],
	"hashes": ["$BUYER3_HASH", "$BUYER_NODE1"]
    }
}
EOF

